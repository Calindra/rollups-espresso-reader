{
  "contractName": "Quorum",
  "sourceName": "contracts/consensus/quorum/Quorum.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "validators",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "epochLength",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "appContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastProcessedBlockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "claim",
          "type": "bytes32"
        }
      ],
      "name": "ClaimAcceptance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "submitter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "appContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastProcessedBlockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "claim",
          "type": "bytes32"
        }
      ],
      "name": "ClaimSubmission",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getEpochLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "appContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lastProcessedBlockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "claim",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "isValidatorInFavorOf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOfValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "appContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lastProcessedBlockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "claim",
          "type": "bytes32"
        }
      ],
      "name": "numOfValidatorsInFavorOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "appContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lastProcessedBlockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "claim",
          "type": "bytes32"
        }
      ],
      "name": "submitClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "validatorById",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "validatorId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "appContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "claim",
          "type": "bytes32"
        }
      ],
      "name": "wasClaimAccepted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161085938038061085983398101604081905261002f9161016e565b80600081116100845760405162461bcd60e51b815260206004820152601d60248201527f65706f6368206c656e677468206d757374206e6f74206265207a65726f000000604482015260640160405180910390fd5b6080526000805b83518110156101305760008482815181106100a8576100a861023a565b6020026020010151905060016000826001600160a01b03166001600160a01b03168152602001908152602001600020546000036101275760006100ea84610250565b6001600160a01b03831660008181526001602090815260408083208590558483526002909152902080546001600160a01b03191690911790559350505b5060010161008b565b5060a052506102779050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461016957600080fd5b919050565b6000806040838503121561018157600080fd5b82516001600160401b038082111561019857600080fd5b818501915085601f8301126101ac57600080fd5b81516020828211156101c0576101c061013c565b8160051b604051601f19603f830116810181811086821117156101e5576101e561013c565b60405292835281830193508481018201928984111561020357600080fd5b948201945b838610156102285761021986610152565b85529482019493820193610208565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161027057634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a0516105b66102a36000396000818161010c01526102f70152600061019001526105b66000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636470af001161005b5780636470af00146101535780637051bfd5146101685780639618f35b1461017b578063cfe8a73b1461018e57600080fd5b80630a6f1fe81461008d5780631c45396a146100c95780631e526e451461010a5780634b84231c14610130575b600080fd5b6100b661009b36600461044b565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b6100f26100d736600461046d565b6000908152600260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100c0565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b61014361013e366004610486565b6101b4565b60405190151581526020016100c0565b6101666101613660046104bf565b6101f1565b005b6100b66101763660046104bf565b610353565b6101436101893660046104f2565b610369565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b60006101e8826101c5878787610395565b600882901c60009081526001918201602052604090205460ff9092161b16151590565b95945050505050565b33600090815260016020526040902054806102525760405162461bcd60e51b815260206004820152601f60248201527f51756f72756d3a2063616c6c6572206973206e6f742076616c696461746f7200604482015260640160405180910390fd5b60408051848152602081018490526001600160a01b0386169133917ff5a28e07a1b89d1ca3f9a2a7ef16bd650503a4791baf2e70dc401c21ee505f0a910160405180910390a360006102a5858585610395565b600883901c6000908152600180830160205260409091205491925060ff84161b1661034c57600882901c600090815260018281016020526040909120805460ff85169290921b909117905561031b60027f0000000000000000000000000000000000000000000000000000000000000000610532565b610326906001610554565b816000016000815461033790610567565b91829055500361034c5761034c8585856103c7565b5050505050565b6000610360848484610395565b54949350505050565b6001600160a01b03821660009081526020818152604080832084845290915290205460ff165b92915050565b6001600160a01b0383166000908152600360209081526040808320858452825280832084845290915290209392505050565b6001600160a01b038316600081815260208181526040808320858452825291829020805460ff1916600117905581518581529081018490527fd3e4892959c6ddb27e02bcaaebc0c1898d0f677b7360bf80339f10a8717957d3910160405180910390a2505050565b80356001600160a01b038116811461044657600080fd5b919050565b60006020828403121561045d57600080fd5b6104668261042f565b9392505050565b60006020828403121561047f57600080fd5b5035919050565b6000806000806080858703121561049c57600080fd5b6104a58561042f565b966020860135965060408601359560600135945092505050565b6000806000606084860312156104d457600080fd5b6104dd8461042f565b95602085013595506040909401359392505050565b6000806040838503121561050557600080fd5b61050e8361042f565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008261054f57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561038f5761038f61051c565b6000600182016105795761057961051c565b506001019056fea2646970667358221220642bb94e1d4dd60f0c8a41a3a000c90390997995461f65183db6e55f56e5032864736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80636470af001161005b5780636470af00146101535780637051bfd5146101685780639618f35b1461017b578063cfe8a73b1461018e57600080fd5b80630a6f1fe81461008d5780631c45396a146100c95780631e526e451461010a5780634b84231c14610130575b600080fd5b6100b661009b36600461044b565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b6100f26100d736600461046d565b6000908152600260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100c0565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b61014361013e366004610486565b6101b4565b60405190151581526020016100c0565b6101666101613660046104bf565b6101f1565b005b6100b66101763660046104bf565b610353565b6101436101893660046104f2565b610369565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b60006101e8826101c5878787610395565b600882901c60009081526001918201602052604090205460ff9092161b16151590565b95945050505050565b33600090815260016020526040902054806102525760405162461bcd60e51b815260206004820152601f60248201527f51756f72756d3a2063616c6c6572206973206e6f742076616c696461746f7200604482015260640160405180910390fd5b60408051848152602081018490526001600160a01b0386169133917ff5a28e07a1b89d1ca3f9a2a7ef16bd650503a4791baf2e70dc401c21ee505f0a910160405180910390a360006102a5858585610395565b600883901c6000908152600180830160205260409091205491925060ff84161b1661034c57600882901c600090815260018281016020526040909120805460ff85169290921b909117905561031b60027f0000000000000000000000000000000000000000000000000000000000000000610532565b610326906001610554565b816000016000815461033790610567565b91829055500361034c5761034c8585856103c7565b5050505050565b6000610360848484610395565b54949350505050565b6001600160a01b03821660009081526020818152604080832084845290915290205460ff165b92915050565b6001600160a01b0383166000908152600360209081526040808320858452825280832084845290915290209392505050565b6001600160a01b038316600081815260208181526040808320858452825291829020805460ff1916600117905581518581529081018490527fd3e4892959c6ddb27e02bcaaebc0c1898d0f677b7360bf80339f10a8717957d3910160405180910390a2505050565b80356001600160a01b038116811461044657600080fd5b919050565b60006020828403121561045d57600080fd5b6104668261042f565b9392505050565b60006020828403121561047f57600080fd5b5035919050565b6000806000806080858703121561049c57600080fd5b6104a58561042f565b966020860135965060408601359560600135945092505050565b6000806000606084860312156104d457600080fd5b6104dd8461042f565b95602085013595506040909401359392505050565b6000806040838503121561050557600080fd5b61050e8361042f565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008261054f57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561038f5761038f61051c565b6000600182016105795761057961051c565b506001019056fea2646970667358221220642bb94e1d4dd60f0c8a41a3a000c90390997995461f65183db6e55f56e5032864736f6c63430008170033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "events": {
      "ClaimAcceptance(address,uint256,bytes32)": {
        "params": {
          "appContract": "The application contract address",
          "claim": "The root of the Merkle tree of outputs",
          "lastProcessedBlockNumber": "The number of the last processed block"
        }
      },
      "ClaimSubmission(address,address,uint256,bytes32)": {
        "params": {
          "appContract": "The application contract address",
          "claim": "The root of the Merkle tree of outputs",
          "lastProcessedBlockNumber": "The number of the last processed block",
          "submitter": "The submitter address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Duplicates in the `validators` array are ignored.Reverts if the epoch length is zero.",
        "params": {
          "epochLength": "The epoch length",
          "validators": "The array of validator addresses"
        }
      },
      "getEpochLength()": {
        "details": "The epoch number of a block is defined as the integer division of the block number by the epoch length."
      },
      "isValidatorInFavorOf(address,uint256,bytes32,uint256)": {
        "details": "Assumes the provided ID is valid.",
        "params": {
          "appContract": "The application contract address",
          "claim": "The output Merkle root hash",
          "id": "The ID of the validator",
          "lastProcessedBlockNumber": "The number of the last processed block"
        },
        "returns": {
          "_0": "Whether validator is in favor of claim"
        }
      },
      "numOfValidatorsInFavorOf(address,uint256,bytes32)": {
        "params": {
          "appContract": "The application contract address",
          "claim": "The output Merkle root hash",
          "lastProcessedBlockNumber": "The number of the last processed block"
        },
        "returns": {
          "_0": "Number of validators in favor of claim"
        }
      },
      "submitClaim(address,uint256,bytes32)": {
        "details": "MUST fire a `ClaimSubmission` event.MAY fire a `ClaimAcceptance` event, if the acceptance criteria is met.",
        "params": {
          "appContract": "The application contract address",
          "claim": "The root of the Merkle tree of outputs",
          "lastProcessedBlockNumber": "The number of the last processed block"
        }
      },
      "validatorById(uint256)": {
        "details": "Validator IDs range from 1 to `N`, the total number of validators.Invalid IDs map to address zero.",
        "params": {
          "id": "The validator ID"
        }
      },
      "validatorId(address)": {
        "details": "Validators have IDs greater than zero.Non-validators are assigned to ID zero.",
        "params": {
          "validator": "The validator address"
        }
      },
      "wasClaimAccepted(address,bytes32)": {
        "params": {
          "appContract": "The application contract address",
          "claim": "The root of the Merkle tree of outputs"
        }
      }
    },
    "stateVariables": {
      "_validatorById": {
        "details": "Invalid IDs map to address zero."
      },
      "_validatorId": {
        "details": "Non-validators are assigned to ID zero.Validators have IDs greater than zero."
      },
      "_votes": {
        "details": "See the `numOfValidatorsInFavorOf` and `isValidatorInFavorOf` functions."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "ClaimAcceptance(address,uint256,bytes32)": {
        "notice": "MUST trigger when a claim is accepted."
      },
      "ClaimSubmission(address,address,uint256,bytes32)": {
        "notice": "MUST trigger when a claim is submitted."
      }
    },
    "kind": "user",
    "methods": {
      "getEpochLength()": {
        "notice": "Get the epoch length, in number of base layer blocks."
      },
      "isValidatorInFavorOf(address,uint256,bytes32,uint256)": {
        "notice": "Check whether a validator is in favor of a claim."
      },
      "numOfValidators()": {
        "notice": "Get the number of validators."
      },
      "numOfValidatorsInFavorOf(address,uint256,bytes32)": {
        "notice": "Get the number of validators in favor of a claim."
      },
      "submitClaim(address,uint256,bytes32)": {
        "notice": "Submit a claim to the consensus."
      },
      "validatorById(uint256)": {
        "notice": "Get the address of a validator by its ID."
      },
      "validatorId(address)": {
        "notice": "Get the ID of a validator."
      },
      "wasClaimAccepted(address,bytes32)": {
        "notice": "Check if an output Merkle root hash was ever accepted by the consensus for a particular application."
      }
    },
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "292400",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "getEpochLength()": "infinite",
        "isValidatorInFavorOf(address,uint256,bytes32,uint256)": "3008",
        "numOfValidators()": "infinite",
        "numOfValidatorsInFavorOf(address,uint256,bytes32)": "2798",
        "submitClaim(address,uint256,bytes32)": "infinite",
        "validatorById(uint256)": "2500",
        "validatorId(address)": "2527",
        "wasClaimAccepted(address,bytes32)": "2706"
      },
      "internal": {
        "_getVotes(address,uint256,bytes32)": "252"
      }
    },
    "methodIdentifiers": {
      "getEpochLength()": "cfe8a73b",
      "isValidatorInFavorOf(address,uint256,bytes32,uint256)": "4b84231c",
      "numOfValidators()": "1e526e45",
      "numOfValidatorsInFavorOf(address,uint256,bytes32)": "7051bfd5",
      "submitClaim(address,uint256,bytes32)": "6470af00",
      "validatorById(uint256)": "1c45396a",
      "validatorId(address)": "0a6f1fe8",
      "wasClaimAccepted(address,bytes32)": "9618f35b"
    }
  }
}