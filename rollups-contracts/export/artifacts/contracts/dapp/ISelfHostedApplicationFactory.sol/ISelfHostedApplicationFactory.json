{
  "contractName": "ISelfHostedApplicationFactory",
  "sourceName": "contracts/dapp/ISelfHostedApplicationFactory.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorityOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "epochLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "appOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "templateHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "calculateAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorityOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "epochLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "appOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "templateHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "deployContracts",
      "outputs": [
        {
          "internalType": "contract IApplication",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getApplicationFactory",
      "outputs": [
        {
          "internalType": "contract IApplicationFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorityFactory",
      "outputs": [
        {
          "internalType": "contract IAuthorityFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "calculateAddresses(address,uint256,address,bytes32,bytes32)": {
        "params": {
          "appOwner": "The initial application owner",
          "authorityOwner": "The initial authority owner",
          "epochLength": "The epoch length",
          "salt": "The salt used to deterministically generate the addresses",
          "templateHash": "The initial machine state hash"
        },
        "returns": {
          "_0": "The application address",
          "_1": "The authority address"
        }
      },
      "deployContracts(address,uint256,address,bytes32,bytes32)": {
        "details": "Reverts if the authority owner address is zero.Reverts if the application owner address is zero.Reverts if the epoch length is zero.",
        "params": {
          "appOwner": "The initial application owner",
          "authorityOwner": "The initial authority owner",
          "epochLength": "The epoch length",
          "salt": "The salt used to deterministically generate the addresses",
          "templateHash": "The initial machine state hash"
        },
        "returns": {
          "_0": "The application contract",
          "_1": "The authority contract"
        }
      },
      "getApplicationFactory()": {
        "returns": {
          "_0": "The application factory"
        }
      },
      "getAuthorityFactory()": {
        "returns": {
          "_0": "The authority factory"
        }
      }
    },
    "title": "Self-hosted Application Factory interface",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "calculateAddresses(address,uint256,address,bytes32,bytes32)": {
        "notice": "Calculate the addresses of the application and authority contracts to be deployed deterministically."
      },
      "deployContracts(address,uint256,address,bytes32,bytes32)": {
        "notice": "Deploy new application and authority contracts deterministically."
      },
      "getApplicationFactory()": {
        "notice": "Get the factory used to deploy `IApplication` contracts"
      },
      "getAuthorityFactory()": {
        "notice": "Get the factory used to deploy `IAuthority` contracts"
      }
    },
    "version": 1
  },
  "evm": {
    "gasEstimates": null,
    "methodIdentifiers": {
      "calculateAddresses(address,uint256,address,bytes32,bytes32)": "de4d53fd",
      "deployContracts(address,uint256,address,bytes32,bytes32)": "ffc643ca",
      "getApplicationFactory()": "e63d50ff",
      "getAuthorityFactory()": "75689f83"
    }
  }
}